apiVersion: mydecisive.ai/v1
kind: MyDecisiveEngine
metadata:
  namespace: mdai
  labels:
    app.kubernetes.io/name: mydecisiveengine
    app.kubernetes.io/instance: mydecisiveengine-sample
    app.kubernetes.io/part-of: mydecisive-engine-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: mydecisive-engine-operator
  name: mydecisiveengine-sample-1
spec:
  telemetryModule:
    attributes:
      name: "telemetry"
      version: "0.0.1"
    collectors:
      -
        name: "gateway"
        enabled: true
        measureVolumes: true
        telemetryFiltering:
            filters:
              - name: test-filter
                enabled: false
                description: Hello this is filter
                mutedPipelines:
                  - logs/foobar
              - name: another-filter
                enabled: true
                description: WHOA two filters!?
                mutedPipelines:
                  - metrics
        spec:
          ingress:
            annotations:
              # MUST BE SPECIFIED!
              # add certificate arn (or multiple certificates arn, comma separated) for the grpc endpoints
              alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:012345678901:certificate/th15-15-@n-@ut0g3n3r@ted-numb3r # TODO: CHANGE ME TO A REAL ARN!!!
              alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
              alb.ingress.kubernetes.io/load-balancer-name: mdai-grpc-endpoint
              alb.ingress.kubernetes.io/backend-protocol-version: GRPC
              alb.ingress.kubernetes.io/scheme: internet-facing
              alb.ingress.kubernetes.io/target-type: ip
              kubernetes.io/ingress.class: alb
            # this section is required if collector has grpc endpoints (receivers).
            # for each enabled grpc receiver receivername -> hostname mapping should be provided
            # these hostnames must be CNAMEs for corresponding ALB public address and will be used
            # for connectivity to the corresponding collector receiver
            collectorEndpoints:
              otlp: otlp.grpc.endpoint.collector.your-domain.io
              jaeger: jaeger.grpc.endpoint.collector.your-domain.io
            ingressClassName: alb
            ruleType: path
            type: aws
          replicas: 2
          ports:
            - name: promexporter
              port: 9464
              protocol: TCP
            - name: metrics
              port: 8888
              protocol: TCP
            - name: otlp-grpc
              port: 4317
            - name: otlp-http
              port: 4318
          config: |
            receivers:
              hostmetrics:
                collection_interval: 23s
                scrapers:
                  load:
                  filesystem:
                  memory:
                  network:
                  paging:
                  processes:
                  process:
              otlp:
                protocols:
                  grpc:
                    endpoint: "0.0.0.0:4317"
                  http:
                    endpoint: "0.0.0.0:4318"
            processors:
              resource:
                attributes:
                - key: service.instance.id
                  from_attribute: k8s.pod.uid
                  action: insert

            exporters:
              debug: 
                verbosity: detailed
                sampling_initial: 2
                sampling_thereafter: 100

            service:
              pipelines:
                traces:
                  receivers: [otlp]
                  processors: [resource]
                  exporters: [debug]
                metrics:
                  receivers: [otlp]
                  processors: [resource]
                  exporters: [debug]
                logs:
                  receivers: [otlp]
                  processors: [resource]
                  exporters: [debug]
                logs/foobar:
                  receivers: [otlp]
                  processors: [resource]
                  exporters: [debug]
